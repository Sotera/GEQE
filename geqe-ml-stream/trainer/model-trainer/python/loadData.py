import sysimport globimport jsonimport tangelosys.path.insert(0, '../../../lib')from clustering import ScoreRecord, ScoreBin, rec_to_key@tangelo.restfuldef get(filePath='../../', subDir='raw_tweet_data/analyzed/', bin_size=0.005, date="2016-01-01"):    search_name  = filePath + subDir + date + "*"    print search_name    files = glob.glob(search_name)    bins = {}    print "Processing", len(files), "files"    n_files = 0    n_thresh = 0    thresh = [.1, .2, .3, .4, .5, .6, .7, .8, .9, .95, .99, 1.1]    stop = ['#jobs', '#job']    for file in files:        n_files = n_files + 1        if float(n_files)/float(len(files)) > thresh[n_thresh]:            print "Completed reading in", float(n_files)/float(len(files)), "% of files"            n_thresh = n_thresh + 1        d0 = open(file)        for line in d0:            sr = ScoreRecord(line)            if sr.has_keyword(stop):                continue            k = rec_to_key(sr, float(bin_size))            if k in bins.keys():                bins[k].add_record(sr)            else:                bins[k] = ScoreBin(sr, k)    print "All files processed"    full_bins = filter(lambda x: x.bin_size()>5, bins.values())    points = {}    points['coords'] = []    points['tweets'] = []    points['g_keys'] = []    print "Bins to process:", len(full_bins)    n_thresh = 0    n_files = 0    for bin in full_bins:        n_files = n_files + 1        if float(n_files)/float(len(full_bins)) > thresh[n_thresh]:            print "Completed processing", float(n_files)/float(len(files)), "% of bins"            n_thresh = n_thresh + 1        time_free_key = bin.bin_location()        add_point = True        for i in range(len(points['coords'])):            p = points['coords'][i]            if p[0]==bin.lat and p[1]==bin.lon:                add_point=False                points['tweets'][i][str(bin.dt.hour)] = bin.captions                points['g_keys'][i][str(bin.dt.hour)] = bin.key        if add_point==True:            points['coords'].append([bin.lat,bin.lon])            points['tweets'].append({str(bin.dt.hour):bin.captions})            points['g_keys'].append({str(bin.dt.hour):bin.key})    points['n_coords'] = len(points['coords'])    return points